{"ast":null,"code":"var _jsxFileName = \"/Users/srinivasavva/Desktop/UI-Challenegs/Todo_List_Web_App/src/TodoList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList({\n  items,\n  removeTodo,\n  toggleCompletion,\n  isDarkMode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => toggleCompletion(item.id),\n            checked: item.completed,\n            className: \"checkbox-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `todo-text ${item.completed ? isDarkMode ? \"completed\" : \"lightmode\" : \"\"} ${!isDarkMode ? \"todo-text-light-mode\" : \"\"}`,\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => removeTodo(item.id),\n            src: \"./icon-cross.svg\",\n            alt: \"clear-todo-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hr-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoList","items","removeTodo","toggleCompletion","isDarkMode","children","className","map","item","index","Fragment","type","onChange","id","checked","completed","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/srinivasavva/Desktop/UI-Challenegs/Todo_List_Web_App/src/TodoList.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction TodoList({ items, removeTodo, toggleCompletion, isDarkMode }) {\n  return (\n    <div>\n      <ul className=\"todo-list\">\n        {items.map((item, index) => (\n          <React.Fragment>\n            <li key={item.id}>\n              <input\n                type=\"checkbox\"\n                onChange={() => toggleCompletion(item.id)}\n                checked={item.completed}\n                className=\"checkbox-btn\"\n              />\n              <span\n                className={`todo-text ${\n                  item.completed ? (isDarkMode ? \"completed\" : \"lightmode\") : \"\"\n                } ${!isDarkMode ? \"todo-text-light-mode\" : \"\"}`}\n              >\n                {item.text}\n              </span>\n              <img\n                onClick={() => removeTodo(item.id)}\n                src=\"./icon-cross.svg\"\n                alt=\"clear-todo-item\"\n              />\n            </li>\n            {<hr className=\"hr-line\" />}\n          </React.Fragment>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC;AAAW,CAAC,EAAE;EACrE,oBACEL,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAIO,SAAS,EAAC,WAAW;MAAAD,QAAA,EACtBJ,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBV,OAAA,CAACF,KAAK,CAACa,QAAQ;QAAAL,QAAA,gBACbN,OAAA;UAAAM,QAAA,gBACEN,OAAA;YACEY,IAAI,EAAC,UAAU;YACfC,QAAQ,EAAEA,CAAA,KAAMT,gBAAgB,CAACK,IAAI,CAACK,EAAE,CAAE;YAC1CC,OAAO,EAAEN,IAAI,CAACO,SAAU;YACxBT,SAAS,EAAC;UAAc;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACFpB,OAAA;YACEO,SAAS,EAAG,aACVE,IAAI,CAACO,SAAS,GAAIX,UAAU,GAAG,WAAW,GAAG,WAAW,GAAI,EAC7D,IAAG,CAACA,UAAU,GAAG,sBAAsB,GAAG,EAAG,EAAE;YAAAC,QAAA,EAE/CG,IAAI,CAACY;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACPpB,OAAA;YACEsB,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACM,IAAI,CAACK,EAAE,CAAE;YACnCS,GAAG,EAAC,kBAAkB;YACtBC,GAAG,EAAC;UAAiB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA,GAlBKX,IAAI,CAACK,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBZ,CAAC,eACJpB,OAAA;UAAIO,SAAS,EAAC;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACK,EAAA,GAhCQxB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}